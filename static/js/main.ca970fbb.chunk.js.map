{"version":3,"sources":["components/Feedback/feedback.styled.js","components/Feedback/FeedbackOptions/FeedbackOptions.jsx","components/Feedback/Notification/Notification.jsx","components/Feedback/Section/Section.jsx","components/Feedback/Statistics/Statistics.jsx","components/Feedback/feedback.jsx","components/App/App.jsx","index.js"],"names":["FeedbackSection","BtnWrapper","FeedbackBtn","StatsItem","FeedbackOptions","this","props","options","map","item","type","value","onClick","onLeaveFeedback","Component","Notification","message","Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","Feedback","state","HendleBtn","event","target","setState","prevState","countTotalFeedback","Object","values","reduce","sum","countPositiveFeedbackPercentage","positiveFeedback","Math","round","keys","App","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"6PAEO,IAAMA,EAAe,mJAQfC,EAAU,qGAKVC,EAAW,2OAcXC,EAAS,wG,OC1BTC,EAAb,4JACE,WAAU,IAAD,OACP,OACE,cAACH,EAAD,UACGI,KAAKC,MAAMC,QAAQC,KAAI,SAAAC,GACtB,OACE,cAACP,EAAD,CACEQ,KAAK,SACLC,MAAOF,EACPG,QAAS,EAAKN,MAAMO,gBAHtB,SAMGJ,GAFIA,YAVnB,GAAqCK,aCDxBC,EAAb,4JACE,WACE,OAAO,4BAAIV,KAAKC,MAAMU,cAF1B,GAAkCF,aCArBG,EAAb,4JACE,WACE,OACE,gCACE,6BAAKZ,KAAKC,MAAMY,QAEfb,KAAKC,MAAMa,gBANpB,GAA6BL,aCChBM,EAAb,4JACE,WACE,OACE,+BACE,eAACjB,EAAD,oDAAoBE,KAAKC,MAAMe,QAC/B,eAAClB,EAAD,sEAAuBE,KAAKC,MAAMgB,WAClC,eAACnB,EAAD,8CAAmBE,KAAKC,MAAMiB,OAC9B,eAACpB,EAAD,yFAA2BE,KAAKC,MAAMkB,SACtC,eAACrB,EAAD,uHACuBE,KAAKC,MAAMmB,6BAT1C,GAAgCX,aCInBY,EAAb,4MACEC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,GAJT,EAOEK,UAAY,SAAAC,GACV,IAAMlB,EAAQkB,EAAMC,OAAOnB,MAE3B,EAAKoB,UAAS,SAAAC,GAAS,sBACpBrB,EAAQqB,EAAUrB,GAAS,OAXlC,EAeEsB,mBAAqB,WAKnB,OAJoBC,OAAOC,OAAO,EAAKR,OACfS,QAAO,SAACC,EAAK5B,GACnC,OAAO4B,EAAM5B,IACZ,IAnBP,EAuBE6B,gCAAkC,WAChC,IAAMC,EACH,IAAM,EAAKN,qBAAwB,EAAKN,MAAMN,KACjD,OAAOmB,KAAKC,MAAMF,GAAoB,KA1B1C,4CA6BE,WACE,OACE,eAACvC,EAAD,WACE,cAAC,EAAD,CAASkB,MAAM,wKAAf,SACE,cAAC,EAAD,CACEX,QAAS2B,OAAOQ,KAAKrC,KAAKsB,OAC1Bd,gBAAiBR,KAAKuB,cAI1B,cAAC,EAAD,CAASV,MAAM,+DAAf,SACGb,KAAK4B,qBACJ,cAAC,EAAD,CACEZ,KAAMhB,KAAKsB,MAAMN,KACjBC,QAASjB,KAAKsB,MAAML,QACpBC,IAAKlB,KAAKsB,MAAMJ,IAChBC,MAAOnB,KAAK4B,qBACZR,mBAAoBpB,KAAKiC,oCAG3B,cAAC,EAAD,CAActB,QAAQ,6HAjDlC,GAA8BF,aCLvB,SAAS6B,IACd,OACE,mCACE,cAAC,EAAD,MCANC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACH,EAAD,MAEFI,SAASC,cAAc,Y","file":"static/js/main.ca970fbb.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\n\nexport const FeedbackSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 400px;\n  margin: auto;\n`;\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const FeedbackBtn = styled.button`\n  width: 100px;\n  height: 30px;\n  background-color: rgba(0, 0, 255, 0.1);\n  border: none;\n  cursor: pointer;\n  color: white;\n  text-transform: capitalize;\n\n  &:not(:last-child) {\n    margin-right: 15px;\n  }\n`;\n\nexport const StatsItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n","import { Component } from 'react';\nimport { BtnWrapper, FeedbackBtn } from 'components/Feedback/feedback.styled';\n\nexport class FeedbackOptions extends Component {\n  render() {\n    return (\n      <BtnWrapper>\n        {this.props.options.map(item => {\n          return (\n            <FeedbackBtn\n              type=\"button\"\n              value={item}\n              onClick={this.props.onLeaveFeedback}\n              key={item}\n            >\n              {item}\n            </FeedbackBtn>\n          );\n        })}\n      </BtnWrapper>\n    );\n  }\n}\n","import { Component } from 'react';\n\nexport class Notification extends Component {\n  render() {\n    return <p>{this.props.message}</p>;\n  }\n}\n","import { Component } from 'react';\n\nexport class Section extends Component {\n  render() {\n    return (\n      <div>\n        <h2>{this.props.title}</h2>\n\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { StatsItem } from '../feedback.styled';\n\nexport class Statistics extends Component {\n  render() {\n    return (\n      <ul>\n        <StatsItem>Хорошо: {this.props.good}</StatsItem>\n        <StatsItem>Нормально: {this.props.neutral}</StatsItem>\n        <StatsItem>Плохо: {this.props.bad}</StatsItem>\n        <StatsItem>Всего отзывов: {this.props.total}</StatsItem>\n        <StatsItem>\n          Позитивных отзывов: {this.props.positivePercentage}\n        </StatsItem>\n      </ul>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { FeedbackSection } from './feedback.styled';\nimport { FeedbackOptions } from './FeedbackOptions/FeedbackOptions';\nimport { Notification } from './Notification/Notification';\nimport { Section } from './Section/Section';\nimport { Statistics } from './Statistics/Statistics';\n\nexport class Feedback extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  HendleBtn = event => {\n    const value = event.target.value;\n\n    this.setState(prevState => ({\n      [value]: prevState[value] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const stateValues = Object.values(this.state);\n    const sum = stateValues.reduce((sum, item) => {\n      return sum + item;\n    }, 0);\n    return sum;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const positiveFeedback =\n      (100 / this.countTotalFeedback()) * this.state.good;\n    return Math.round(positiveFeedback) + '%';\n  };\n\n  render() {\n    return (\n      <FeedbackSection>\n        <Section title=\"Пожалуйста оставьте свой отзыв\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.HendleBtn}\n          />\n        </Section>\n\n        <Section title=\"Статистика\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            ></Statistics>\n          ) : (\n            <Notification message=\"Отзывы еще не собраны\"></Notification>\n          )}\n        </Section>\n      </FeedbackSection>\n    );\n  }\n}\n","import { Feedback } from 'components/Feedback/feedback';\n\nexport function App() {\n  return (\n    <>\n      <Feedback />\n    </>\n  );\n}\n","import 'index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from 'components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}